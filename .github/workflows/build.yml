on:
  push:
    paths-ignore:
      - '*.md'

jobs:
  build_job:
    runs-on: ubuntu-latest
    name: Build
    steps:
        - name: Checkout
          uses: actions/checkout@v2.3.1
          
        - name: Setup Docker
          uses: docker-practice/actions-setup-docker@0.0.1
        
        - name: Init CUDA Submodule
          run: git submodule update --init

        - name: Enable Expermental For Squash and copy Nvidia repos
          run: |
            sudo cp ./cuda/dist/11.0/centos8-x86_64/base/cuda.repo ./cuda.repo
            sudo cp ./cuda/dist/11.0/centos8-x86_64/base/nvidia-ml.repo ./nvidia-ml.repo
            sudo cp ./daemon.json /etc/docker/daemon.json
            sudo systemctl restart docker 
                      
        - name: Build Nvidia CUDA Base
          uses: whoan/docker-build-with-cache-action@v5
          with: 
            image_name: nvidia/cuda:11.0-base-centos8
            push_image_and_stages: false
            dockerfile: ./cuda/dist/11.0/centos8-x86_64/base/Dockerfile
          
        - name: Build Nvidia CUDA Runtime
          uses: whoan/docker-build-with-cache-action@v5
          with: 
            image_name: nvidia/cuda:11.0-runtime-centos8
            push_image_and_stages: false
            dockerfile: ./cuda/dist/11.0/centos8-x86_64/runtime/Dockerfile
            build_extra_args: --build-arg "IMAGE_NAME=nvidia/cuda"
          
        - name: Build Main Image
          uses: whoan/docker-build-with-cache-action@v5
          with: 
            image_name: local/adoptopenjdk14-cuda-openj9xl-centos:latest
            push_image_and_stages: false
            dockerfile: ./Dockerfile
            build_extra_args: --squash
          
        - name: Slim Image
          run: |
            curl https://downloads.dockerslim.com/releases/1.29.0/dist_linux.tar.gz -o dist_linux.tar.gz
            docker images
            tar -xf dist_linux.tar.gz
            sudo chmod +x ./dist_linux/docker-slim
            sudo ./dist_linux/docker-slim build --http-probe=false --continue-after=0 --tag=local/adoptopenjdk14-cuda-openj9xl-centos-slim local/adoptopenjdk14-cuda-openj9xl-centos
          
        - name: Run the local Anchore scan action itself with GitHub Advanced Security code scanning integration enabled
          uses: anchore/scan-action@master
          with:
            image-reference: "local/adoptopenjdk14-cuda-openj9xl-centos-slim"
            dockerfile-path: "Dockerfile"
            acs-report-enable: true
            include-app-packages: true
            debug: true 
          
        - name: Upload Anchore Scan Report
          uses: github/codeql-action/upload-sarif@v1
          with:
            sarif_file: results.sarif
          
        - name: Upload Docker file
          run: |
            docker tag local/adoptopenjdk14-cuda-openj9xl-centos-slim bgidiere/adoptopenjdk14-cuda-openj9xl-centos-slim
            docker push bgidiere/adoptopenjdk14-cuda-openj9xl-centos-slim:latest
            
            


            
